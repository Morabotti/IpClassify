name: Build and Test IpClassify

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/backend/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Build with Maven
      working-directory: ./backend
      run: mvn clean install -DskipTests=false

    - name: Run unit tests
      working-directory: ./backend
      run: mvn test

  package:
    name: Package Application
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/backend/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Package the application
      working-directory: ./backend
      run: mvn clean package -DskipTests=true

    - name: Build Docker Image with Spring Boot
      run: mvn spring-boot:build-image -DskipTests=true -Dspring-boot.build-image.imageName=ip-classify:latest
      working-directory: ./backend

    - name: Save Docker Image
      run: docker save ip-classify:latest -o ip-classify.tar

    - name: Upload Docker Image as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ip-classify-image
        path: ip-classify.tar
